import React, { useEffect, useState } from 'react';
import { Alert, ScrollView, Text, View } from 'react-native';
import { useLocalSearchParams } from 'expo-router';
import { supabase } from '../../lib/supabase';
import { Image } from 'expo-image';
import { posterUrl } from '../../lib/tmdb';

type Row = {
  id: string;
  title: string | null;
  year: string | null;
  media_type: string | null;
  created_at: string;
  payload: any | null;
};

export default function DetailScreen() {
  const { id } = useLocalSearchParams<{ id: string }>();
  const [row, setRow] = useState<Row | null>(null);

  useEffect(() => {
    (async () => {
      try {
        const { data, error } = await supabase
          .from('saved_items')
          .select('*')
          .eq('id', id)
          .single();
        if (error) throw error;
        setRow(data as any);
      } catch (e: any) {
        Alert.alert('Load failed', e?.message ?? String(e));
      }
    })();
  }, [id]);

  const uri = posterUrl(row?.payload?.poster_path, 'w342');
  const overview = row?.payload?.overview ?? 'No overview available.';

  return (
    <ScrollView style={{ flex: 1, backgroundColor: '#000', padding: 16 }}>
      <Text style={{ color: '#fff', fontSize: 24, fontWeight: '700', marginBottom: 12 }}>
        {row?.title ?? 'Untitled'}{row?.year ? ` · ${row.year}` : ''}
      </Text>
      {!!uri && (
        <Image source={{ uri }} style={{ width: '100%', height: 480, borderRadius: 12, backgroundColor: '#111', marginBottom: 12 }} contentFit="cover" />
      )}
      <Text style={{ color: '#aaa', marginBottom: 8 }}>
        {row?.media_type?.toUpperCase() ?? '—'} • {new Date(row?.created_at ?? Date.now()).toLocaleString()}
      </Text>
      <Text style={{ color: '#ddd', lineHeight: 20 }}>{overview}</Text>
    </ScrollView>
  );
}
